<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MeasurementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MeasurementRepository extends EntityRepository
{
    /**
     * Count all Measurements.
     *
     * @return int
     */
    public function countAll()
    {
        $qb = $this->getEntityManager()->createQueryBuilder();

        $qb->select($qb->expr()->count('d'))
            ->from($this->_entityName, 'd');

        return (int)$qb->getQuery()->getSingleScalarResult();
    }

    /**
     * Retrive all active measurements
     *
     * @return array
     */
    public function getActive()
    {
        $em = $this->getEntityManager();

        $entities = $this->findBy(
            array('end' => null),
            array('id'=>'DESC')
        );

        return $entities;
    }

    /**
     * Decides wether the given device already is in use or not.
     *
     * @param Device $device
     * @param Measurement $measurement
     * @return bool
     */
    public function inUse(Device $device, Measurement $measurement = null)
    {
        $id = $device->getId();

        /** @var Measurement $tmpMeasurement */
        foreach ($this->getActive() as $tmpMeasurement) {
            if ($id === $tmpMeasurement->getDevice()->getId()
                && (!$measurement || $measurement->getId() !== $tmpMeasurement->getId())
            ) {
                return true;
            }
        }

        return false;
    }
}
